version: '3.8'

services:
  parking_service:
    build:
      context: .
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/car_parking
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=mypassword
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - parking_network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: car_parking
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d car_parking"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - parking_network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - parking_network

  kafka:
    image: wurstmeister/kafka:latest
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

    ports:
      - "9092:9092"
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:9092" ]
      interval: 20s
      timeout: 10s
      retries: 15
    depends_on:
      - zookeeper
    networks:
      - parking_network


volumes:
  postgres-data:

networks:
  parking_network:
#    driver: bridge
    external: true
